=== Résultats répondant aux énoncés du README.md === 

Le présent fichier a été généré par l'exécution du fichier code/main.py.

1.1 38013 films figurent dans la base de données.

1.2 71707 users figurent dans la base de données.

1.3 la distribution des notes est representée par un histogramme disponnible selon le chemin suivant: figures/hist_notes.png 

1.4 la répartition des notes dans la base de donnée est la suivante: 
|note|frequence| 
| 0 | 0.03| 
| 1 | 1.17| 
| 2 | 1.0| 
| 3 | 1.68| 
| 4 | 3.06| 
| 5 | 7.57| 
| 6 | 13.06| 
| 7 | 22.43| 
| 8 | 24.11| 
| 9 | 14.12| 
| 10 | 11.76| 

2.1 La colonne liked a été rajoutée dans la table ratings avec les valeurs suivantes: 
- 0 pour les notes [0-6] 
- 1 pour les notes [7-10]. 

2.2 le top 10 des genres les mieux notés en moyenne dans la database: 
|rank|genre|
| 1 | News | 
| 2 | Reality-TV | 
| 3 | Documentary | 
| 4 | Biography | 
| 5 | Music | 
| 6 | Film-Noir | 
| 7 | War | 
| 8 | History | 
| 9 | Animation | 
| 10 | Sport | 

3.1 les 10 films les plus aimés par les internautes sont:
| Five Minutes (2017) |
| Let There Be Light (2017) |
| Avengers: Age of Ultron Parody (2015) |
| MSG 2 the Messenger (2015) |
| Selam (2013) |
| Quiet Riot: Well Now You're Here, There's No Way Back (2014) |
| Crawl Bitch Crawl (2012) |
| Be Somebody (2016) |
| Birlesen Gonuller (2014) |
| Kitbull (2019) |

3.2 le film le plus noté durant l'année 2020 est: A Woman Under the Influence (1974).

4.1 Nous voudrions comparer les performances entre la recherche par les id ou les index.
Notre stratégie consiste à comparer les temps des calcul de chaquene des deux méthodes.
Pour ce faire, nous enregistrons le temps initial (t0), puis on exécute la commande de recherche et 
on enregistre par la suite le temps final (tf). Le temps de calcul pour une méthode donnée est donc tf - t0.
Le temps de calcul enregistrée pour la recherche sans index est de 6.39e-05.
Le temps de calcul enregistrée pour la recherche avec index est de 1.88e-05.La recherche par index a une meilleure performance en terme de temps de calcul.

Remarque: Pour mesurer le temps de calcul, nous avons développé la fonction query_execution_computation_time().
Cependant, il y a une différence entre les résultats obtenus avec et sans l'utilisation de cette fonction.
Cela est probablement dû au temps supplémentaire ajouté pour l'exécution de la commande à l'intérieur de la fonction.
Par conséquent, nous avons choisi de ne prendre en compte que les temps de calcul calculés sans utiliser notre fonction.
